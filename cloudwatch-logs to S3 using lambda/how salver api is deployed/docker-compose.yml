version: "3"

services:
  salver_api:
    image: fooderattwerlo/salver-dev
    ports:
      - "8080:8080"
    command: node main.js
    restart: always
    networks: ['fooder-api-prod-net']
    container_name: "salver_api"
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "ap-south-1"
        awslogs-group: "docker-dev"
        awslogs-stream: "salver_api"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
        
  caddy_service:
    image: 'caddy:latest'
    networks: ['fooder-api-prod-net']
    environment:
      - SSL_EMAIL=${SSL_EMAIL}
      - DOMAIN_API=${DOMAIN_API}
      - DOMAIN_CLOUDFRONT_ORDER=${DOMAIN_CLOUDFRONT_ORDER}
      - DOMAIN_CLOUDFRONT_ADMIN=${DOMAIN_CLOUDFRONT_ADMIN}
    volumes:
      - /vol/caddy/data:/data/caddy
      - /vol/caddy/configs:/etc/caddy
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    ports:
      - 80:80
      - 443:443
    container_name: "caddy_service"

  watchtower:
    image: containrrr/watchtower
    networks: ['fooder-api-prod-net']
    command:
      - "--cleanup"
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    environment:
      - WATCHTOWER_POLL_INTERVAL=60
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: "watchtower"

networks: {fooder-api-prod-net: {}}